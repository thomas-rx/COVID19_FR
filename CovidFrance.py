#!/usr/bin/env python
# coding: utf-8

#Twitter: @xrths
#www.xrths.fr

#Importation des librairies.
import sys

from modules.TwitterEngine import *
from modules.APIEngine import *
from modules.GraphEngine import *
from modules.MathsEngine import *
from modules.TimeEngine import *
from modules.ConfigEngine import *

api, auth = TwitterAuth() #API TWEEPY
directory = getConfig('System', 'directory')
graphIMG = directory + "data/graphIMG.png"
LogTime = "[" + datetime.now().strftime("%D %H:%M:%S") + "] "

#----------------------------------#

if(checkTime() == True): #On v√©rifie le cr√©neau horaire si activ√© dans le fichier config.ini
	pass
else:
	sys.exit()

#----------------------------------#

if(getLastTweet() == 1): #On v√©rifie que le bot n'a pas d√©j√† post√© aujourd'hui
	print(LogTime + "Un tweet post√© avec l'application [" + getConfig('TwitterAPI', 'app_name') + "] existe d√©j√† pour aujourd'hui !")
	sys.exit()
elif(getLastTweet() == 0):
	print(LogTime + "Aucun tweet n'a √©t√© post√© aujourd'hui, suite du programme...")
else:
	print(LogTime + "Erreur.")
	sys.exit()

#----------------------------------#

gouvData = getData("GOUVERNEMENT") #On r√©cup√®re les donn√©es du gouvernement

#----------------------------------#

if(gouvData !=  None): #Si elles sont valides
	checkDataChange() #On v√©rifie quelles sont un minimum coh√©rentes
	worldometersData = getData("WORLDOMETERS") #Si c'est bon, on r√©cup√®re les donn√©es de Worldometers (je l'ai mis ici pour √©viter de spam l'api et de se faire ban-ip)
else:
	print(LogTime + "Aucune donn√©e pour aujourd'hui ! (Source: Gouvernement)\n")
	sys.exit()

#----------------------------------#

DiffData = CalcDifference() #On fait les calculs de toutes les donn√©es
percentageData = percentageCalc()  #On r√©cup√®re les pourcentages

print("\n----------------------------------------\n")

#----------------------------------#

#On met en forme les deux tweets
firstTweetForm = str("‚Ä™La üá´üá∑ est confin√©e depuis:"
		+ "\n" + getDays() + " jours" 
		+ "\n"
		+ "\n" + "üü© " + str("{0:,}".format(gouvData['casGueris'])) + " gu√©ris " + percentageData['casGueris'] + " " + DiffData['casGueris']
		+ "\n" + "üüß " + str("{0:,}".format(gouvData['casMalades'])) + " malades " + DiffData['casMalades_GOUV']
		+ "\n" + "üü• " + "dont " + str("{0:,}".format(gouvData['casReanimation'])) + " cas graves " + DiffData['casReanimation']
		+ "\n" + "‚¨õ " 	+ str("{0:,}".format(gouvData['totalDeces'])) + " morts " + percentageData['totalDeces'] + " " + DiffData['totalDeces']
		+ "\n"
		+ "\n" + "‚Ä™‚óæÔ∏è " + str("{0:,}".format(gouvData['decesHopital'])) + " en h√¥pitaux " + DiffData['decesHopital']
		+ "\n" + "‚Ä™‚óæÔ∏è " + str("{0:,}".format(gouvData['decesEhpad'])) + " en ESMS " + DiffData['decesEhpad'] 
		+ "\n"
		+ "\n" + "‚Ä™ ü¶† ‚Äî " + str("{0:,}".format(gouvData['casConfirmes'])) + " cas " + DiffData['casConfirmes']
		+ "\n"
		+ "\n" + "‚Ä™Graphique üìà ‚Äî ‚¨áÔ∏è‚Ä¨ "
		+ "\n" + "#ConfinementJour" + getDays() + " | #COVID19")

secondTweetForm = str("üè† " + str("{0:,}".format(gouvData['casEhpad'])) + " cas en EHPAD" + " " + DiffData['casEhpad']
		+ "\n" + "üõè " + str("{0:,}".format(gouvData['casHopital'])) + " hospitalis√©s" + " " + DiffData['casHopital']
		+ "\n" + "üî¨ " + str("{0:,}".format(worldometersData['totalTests'])) + " d√©pistages" 
		+ "‚Ä™\n" + ""
		+ "‚Ä™\n" + "üìà √âvolution #graphique du #COVID19 en #France‚Ä¨")

print(firstTweetForm)
print("\n------------------\n")
print(secondTweetForm)

print("\n----------------------------------------\n")

#input("\n----------------------------------------\nPressez ENTRER pour valider le tweet [...]") #D√©commenter pour utiliser le bot manuellement
 
#----------------------------------# 
#On sauvegarde toutes les donn√©es
saveDataGraph(gouvData['casConfirmes'], gouvData['casHopital'], gouvData['casReanimation'], gouvData['totalDeces'], gouvData['casGueris'])
print(LogTime + "Donn√©es du graphique mises √† jours !")

saveGouvData(gouvData)
print(LogTime + "Donn√©es du gouvernement sauvegard√©es !")

saveWorldometersData(worldometersData)
print(LogTime + "Donn√©es de Worldometers sauvegard√©es !")

makeGraph() #On g√©n√®re le graphique
print(LogTime + "Graphique g√©n√©r√© !")

#----------------------------------#
#On tweet
TweetPost = api.update_status(firstTweetForm) 

api.update_with_media(graphIMG, secondTweetForm, in_reply_to_status_id = TweetPost.id, retry_count=10, retry_delay=5, retry_errors=set([503]))

#On envoie le lien du tweet sur le compte priv√© du propri√©taire
api.send_direct_message(recipient_id  = getConfig('TwitterAPI', 'preview_id'), text = "https://twitter.com/" + getConfig('TwitterAPI', 'account_name') + "/status/" + str(TweetPost.id))
